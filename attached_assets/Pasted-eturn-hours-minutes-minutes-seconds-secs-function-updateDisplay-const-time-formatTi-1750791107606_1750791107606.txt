eturn { hours, minutes: minutes, seconds: secs }; } function updateDisplay() { const time = formatTime(timeLeft); const progress = (totalTime - timeLeft) / totalTime; const circumference = 2 * Math.PI * 140; const offset = circumference - (progress * circumference); document.getElementById('hours').textContent = time.hours; document.getElementById('minutes').textContent = time.minutes.toString().padStart(2, '0'); document.getElementById('seconds').textContent = time.seconds.toString().padStart(2, '0'); document.getElementById('progress-circle').style.strokeDashoffset = offset; document.getElementById('state').textContent = isRunning ? 'Meditating...' : timeLeft === 0 ? 'Session complete' : 'Ready to begin'; document.getElementById('play-btn').innerHTML = isRunning ? '' : ''; } function toggleTimer() { if (isRunning) { clearInterval(interval); isRunning = false; } else if (timeLeft > 0) { isRunning = true; interval = setInterval(() => { timeLeft--; if (timeLeft <= 0) { clearInterval(interval); isRunning = false; // Completion notification if ('Notification' in window && Notification.permission === 'granted') { new Notification('Meditation Complete', { body: 'Your meditation session has finished.' }); } } updateDisplay(); }, 1000); } updateDisplay(); } function resetTimer() { clearInterval(interval); isRunning = false; timeLeft = totalTime; updateDisplay(); } function setTimer(minutes) { clearInterval(interval); isRunning = false; totalTime = minutes * 60; timeLeft = totalTime; updateDisplay(); // Update preset buttons document.querySelectorAll('.preset-btn').forEach(btn => { const btnMinutes = parseInt(btn.dataset.minutes); if (btnMinutes === minutes) { btn.style.background = 'hsla(174, 100%, 70%, 0.2)'; btn.style.color = 'var(--ethereal-cyan)'; } else { btn.style.background = 'hsla(255, 255, 255, 0.05)'; btn.style.color = 'var(--soft-gray)'; } }); } // Create stars function createStars() { for (let i = 0; i < 8; i++) { const star = document.createElement('div'); star.className = 'star'; star.style.top = Math.random() * 80 + 10 + '%'; star.style.left = Math.random() * 80 + 10 + '%'; star.style.width = Math.random() * 2 + 1 + 'px';